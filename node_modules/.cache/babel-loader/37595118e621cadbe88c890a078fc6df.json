{"ast":null,"code":"\"use strict\";\n\nvar _extends = Object.assign || function (a) {\n  for (var c, b = 1; b < arguments.length; b++) for (var d in c = arguments[b], c) Object.prototype.hasOwnProperty.call(c, d) && (a[d] = c[d]);\n\n  return a;\n},\n    _react = require(\"react\"),\n    _react2 = _interopRequireDefault(_react),\n    _deepIs = require(\"deep-is\"),\n    _deepIs2 = _interopRequireDefault(_deepIs),\n    _clone = require(\"clone\"),\n    _clone2 = _interopRequireDefault(_clone),\n    _propTypes = require(\"prop-types\"),\n    _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Mathmax = Math.max,\n    _Mathmin = Math.min;\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nfunction _interopRequireDefault(a) {\n  return a && a.__esModule ? a : {\n    default: a\n  };\n}\n\nfunction _objectWithoutProperties(a, b) {\n  var c = {};\n\n  for (var d in a) 0 <= b.indexOf(d) || Object.prototype.hasOwnProperty.call(a, d) && (c[d] = a[d]);\n\n  return c;\n}\n\nfunction _classCallCheck(a, b) {\n  if (!(a instanceof b)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _possibleConstructorReturn(a, b) {\n  if (!a) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return b && (\"object\" == typeof b || \"function\" == typeof b) ? b : a;\n}\n\nfunction _inherits(a, b) {\n  if (\"function\" != typeof b && null !== b) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof b);\n  a.prototype = Object.create(b && b.prototype, {\n    constructor: {\n      value: a,\n      enumerable: !1,\n      writable: !0,\n      configurable: !0\n    }\n  }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b);\n}\n\nvar TableDragSelect = function (a) {\n  function b() {\n    var c, d, f, g;\n\n    _classCallCheck(this, b);\n\n    for (var h = arguments.length, k = Array(h), l = 0; l < h; l++) k[l] = arguments[l];\n\n    return g = (d = (f = _possibleConstructorReturn(this, (c = b.__proto__ || Object.getPrototypeOf(b)).call.apply(c, [this].concat(k))), f), f.state = {\n      selectionStarted: !1,\n      startRow: null,\n      startColumn: null,\n      endRow: null,\n      endColumn: null,\n      addMode: null\n    }, f.componentDidMount = function () {\n      window.addEventListener(\"mouseup\", f.handleTouchEndWindow), window.addEventListener(\"touchend\", f.handleTouchEndWindow);\n    }, f.componentWillUnmount = function () {\n      window.removeEventListener(\"mouseup\", f.handleTouchEndWindow), window.removeEventListener(\"touchend\", f.handleTouchEndWindow);\n    }, f.render = function () {\n      var m = f.props,\n          n = m.value,\n          o = m.onChange,\n          p = _objectWithoutProperties(m, [\"value\", \"onChange\"]);\n\n      return _react2.default.createElement(\"table\", _extends({\n        className: \"table-drag-select\"\n      }, p), _react2.default.createElement(\"tbody\", null, f.renderRows()));\n    }, f.renderRows = function () {\n      return _react2.default.Children.map(f.props.children, function (m, n) {\n        return _react2.default.createElement(\"tr\", _extends({\n          key: n\n        }, m.props), _react2.default.Children.map(m.props.children, function (o, p) {\n          return _react2.default.createElement(Cell, _extends({\n            key: p,\n            onTouchStart: f.handleTouchStartCell,\n            onTouchMove: f.handleTouchMoveCell,\n            selected: f.props.value[n][p],\n            beingSelected: f.isCellBeingSelected(n, p)\n          }, o.props), o.props.children);\n        }));\n      });\n    }, f.handleTouchStartCell = function (m) {\n      var n = 0 === m.button,\n          o = \"mousedown\" !== m.type;\n\n      if (!f.state.selectionStarted && (n || o)) {\n        m.preventDefault();\n        var p = eventToCellLocation(m),\n            q = p.row,\n            r = p.column;\n        f.setState({\n          selectionStarted: !0,\n          startRow: q,\n          startColumn: r,\n          endRow: q,\n          endColumn: r,\n          addMode: !f.props.value[q][r]\n        });\n      }\n    }, f.handleTouchMoveCell = function (m) {\n      if (f.state.selectionStarted) {\n        m.preventDefault();\n        var n = eventToCellLocation(m),\n            o = n.row,\n            p = n.column;\n        f.setState({\n          endRow: o,\n          endColumn: p\n        });\n      }\n    }, f.handleTouchEndWindow = function (m) {\n      var n = 0 === m.button,\n          o = \"mousedown\" !== m.type;\n\n      if (f.state.selectionStarted && (n || o)) {\n        for (var p = (0, _clone2.default)(f.props.value), q = _Mathmin(f.state.startRow, f.state.endRow), r = _Mathmax(f.state.startRow, f.state.endRow), s = q; s <= r; s++) for (var t = _Mathmin(f.state.startColumn, f.state.endColumn), u = _Mathmax(f.state.startColumn, f.state.endColumn), v = t; v <= u; v++) p[s][v] = f.state.addMode;\n\n        f.setState({\n          selectionStarted: !1\n        }), f.props.onChange(p);\n      }\n    }, f.isCellBeingSelected = function (m, n) {\n      var o = _Mathmin(f.state.startRow, f.state.endRow),\n          p = _Mathmax(f.state.startRow, f.state.endRow),\n          q = _Mathmin(f.state.startColumn, f.state.endColumn),\n          r = _Mathmax(f.state.startColumn, f.state.endColumn);\n\n      return f.state.selectionStarted && m >= o && m <= p && n >= q && n <= r;\n    }, d), _possibleConstructorReturn(f, g);\n  }\n\n  return _inherits(b, a), b;\n}(_react2.default.Component);\n\nTableDragSelect.propTypes = {\n  value: function value(a) {\n    var b = new Error(\"Invalid prop `value` supplied to `TableDragSelect`. Validation failed.\");\n    if (!Array.isArray(a.value)) return b;\n\n    if (0 !== a.value.length) {\n      var c = a.value[0].length,\n          d = !0,\n          f = !1,\n          g = void 0;\n\n      try {\n        for (var k, q, h = a.value[Symbol.iterator](); !(d = (k = h.next()).done); d = !0) {\n          if (q = k.value, !Array.isArray(q) || q.length !== c) return b;\n          var l = !0,\n              m = !1,\n              n = void 0;\n\n          try {\n            for (var p, r, o = q[Symbol.iterator](); !(l = (p = o.next()).done); l = !0) if (r = p.value, \"boolean\" != typeof r) return b;\n          } catch (r) {\n            m = !0, n = r;\n          } finally {\n            try {\n              !l && o.return && o.return();\n            } finally {\n              if (m) throw n;\n            }\n          }\n        }\n      } catch (q) {\n        f = !0, g = q;\n      } finally {\n        try {\n          !d && h.return && h.return();\n        } finally {\n          if (f) throw g;\n        }\n      }\n    }\n  },\n  onChange: _propTypes2.default.func,\n  children: function children(a) {\n    if (!TableDragSelect.propTypes.value(a)) {\n      var b = new Error(\"Invalid prop `children` supplied to `TableDragSelect`. Validation failed.\"),\n          c = _react2.default.Children.toArray(a.children),\n          d = a.value.length,\n          f = 0 === a.value.length ? 0 : a.value[0].length;\n\n      if (c.length !== d) return b;\n      var g = !0,\n          h = !1,\n          k = void 0;\n\n      try {\n        for (var m, l = c[Symbol.iterator](); !(g = (m = l.next()).done); g = !0) {\n          var s = m.value,\n              t = _react2.default.Children.toArray(s.props.children);\n\n          if (\"tr\" !== s.type || t.length !== f) return b;\n          var n = !0,\n              o = !1,\n              p = void 0;\n\n          try {\n            for (var r, u, q = t[Symbol.iterator](); !(n = (r = q.next()).done); n = !0) if (u = r.value, \"td\" !== u.type) return b;\n          } catch (u) {\n            o = !0, p = u;\n          } finally {\n            try {\n              !n && q.return && q.return();\n            } finally {\n              if (o) throw p;\n            }\n          }\n        }\n      } catch (s) {\n        h = !0, k = s;\n      } finally {\n        try {\n          !g && l.return && l.return();\n        } finally {\n          if (h) throw k;\n        }\n      }\n    }\n  }\n}, TableDragSelect.defaultProps = {\n  value: [],\n  onChange: function onChange() {}\n}, exports.default = TableDragSelect;\n\nvar Cell = function (a) {\n  function b() {\n    var c, d, f, g;\n\n    _classCallCheck(this, b);\n\n    for (var h = arguments.length, k = Array(h), l = 0; l < h; l++) k[l] = arguments[l];\n\n    return g = (d = (f = _possibleConstructorReturn(this, (c = b.__proto__ || Object.getPrototypeOf(b)).call.apply(c, [this].concat(k))), f), f.shouldComponentUpdate = function (m) {\n      return f.props.beingSelected !== m.beingSelected || f.props.selected !== m.selected;\n    }, f.componentDidMount = function () {\n      f.td.addEventListener(\"touchstart\", f.handleTouchStart, {\n        passive: !1\n      }), f.td.addEventListener(\"touchmove\", f.handleTouchMove, {\n        passive: !1\n      });\n    }, f.componentWillUnmount = function () {\n      f.td.removeEventListener(\"touchstart\", f.handleTouchStart), f.td.removeEventListener(\"touchmove\", f.handleTouchMove);\n    }, f.render = function () {\n      var m = f.props,\n          n = m.className,\n          o = m.disabled,\n          p = m.beingSelected,\n          q = m.selected,\n          r = m.onTouchStart,\n          s = m.onTouchMove,\n          t = _objectWithoutProperties(m, [\"className\", \"disabled\", \"beingSelected\", \"selected\", \"onTouchStart\", \"onTouchMove\"]);\n\n      return o ? n += \" cell-disabled\" : (n += \" cell-enabled\", q && (n += \" cell-selected\"), p && (n += \" cell-being-selected\")), _react2.default.createElement(\"td\", _extends({\n        ref: function ref(u) {\n          return f.td = u;\n        },\n        className: n,\n        onMouseDown: f.handleTouchStart,\n        onMouseMove: f.handleTouchMove\n      }, t), f.props.children || _react2.default.createElement(\"span\", null, \"\\xA0\"));\n    }, f.handleTouchStart = function (m) {\n      f.props.disabled || f.props.onTouchStart(m);\n    }, f.handleTouchMove = function (m) {\n      f.props.disabled || f.props.onTouchMove(m);\n    }, d), _possibleConstructorReturn(f, g);\n  }\n\n  return _inherits(b, a), b;\n}(_react2.default.Component),\n    eventToCellLocation = function (a) {\n  var b;\n\n  if (a.touches) {\n    var c = a.touches[0];\n    b = document.elementFromPoint(c.clientX, c.clientY);\n  } else for (b = a.target; \"TD\" !== b.tagName;) b = b.parentNode;\n\n  return {\n    row: b.parentNode.rowIndex,\n    column: b.cellIndex\n  };\n};","map":{"version":3,"mappings":"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","names":["Math","max","min","TableDragSelect","state","selectionStarted","startRow","startColumn","endRow","endColumn","addMode","componentDidMount","window","addEventListener","f","handleTouchEndWindow","componentWillUnmount","removeEventListener","render","props","value","onChange","_react2","className","renderRows","Children","map","children","key","i","tr","Cell","j","onTouchStart","handleTouchStartCell","onTouchMove","handleTouchMoveCell","selected","beingSelected","isCellBeingSelected","cell","n","m","button","o","type","isLeftClick","isTouch","e","preventDefault","eventToCellLocation","row","column","setState","p","q","_Mathmin","r","_Mathmax","s","minRow","maxRow","t","u","v","minColumn","maxColumn","Component","propTypes","b","Error","Array","isArray","error","a","length","c","Symbol","columnCount","_propTypes2","func","toArray","d","trs","rowCount","tds","h","defaultProps","shouldComponentUpdate","nextProps","td","handleTouchStart","passive","handleTouchMove","disabled","ref","onMouseDown","onMouseMove","touches","document","elementFromPoint","touch","clientX","clientY","target","tagName","parentNode","rowIndex","cellIndex"],"sources":["/Users/Cindy/node_modules/react-table-drag-select/index.js"],"sourcesContent":["import React from \"react\";\nimport equal from \"deep-is\";\nimport clone from \"clone\";\nimport PropTypes from \"prop-types\";\n\nexport default class TableDragSelect extends React.Component {\n  static propTypes = {\n    value: props => {\n      const error = new Error(\n        \"Invalid prop `value` supplied to `TableDragSelect`. Validation failed.\"\n      );\n      if (!Array.isArray(props.value)) {\n        return error;\n      }\n      if (props.value.length === 0) {\n        return;\n      }\n      const columnCount = props.value[0].length;\n      for (const row of props.value) {\n        if (!Array.isArray(row) || row.length !== columnCount) {\n          return error;\n        }\n        for (const cell of row) {\n          if (typeof cell !== \"boolean\") {\n            return error;\n          }\n        }\n      }\n    },\n    onChange: PropTypes.func,\n    children: props => {\n      if (TableDragSelect.propTypes.value(props)) {\n        return; // Let error be handled elsewhere\n      }\n      const error = new Error(\n        \"Invalid prop `children` supplied to `TableDragSelect`. Validation failed.\"\n      );\n      const trs = React.Children.toArray(props.children);\n      const rowCount = props.value.length;\n      const columnCount = props.value.length === 0 ? 0 : props.value[0].length;\n      if (trs.length !== rowCount) {\n        return error;\n      }\n      for (const tr of trs) {\n        const tds = React.Children.toArray(tr.props.children);\n        if (tr.type !== \"tr\" || tds.length !== columnCount) {\n          return error;\n        }\n        for (const td of tds) {\n          if (td.type !== \"td\") {\n            return error;\n          }\n        }\n      }\n    }\n  };\n\n  static defaultProps = {\n    value: [],\n    onChange: () => {}\n  };\n\n  state = {\n    selectionStarted: false,\n    startRow: null,\n    startColumn: null,\n    endRow: null,\n    endColumn: null,\n    addMode: null\n  };\n\n  componentDidMount = () => {\n    window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n    window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n    window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n  };\n\n  render = () => {\n    const { value, onChange, ...props } = this.props;\n    return (\n      <table className=\"table-drag-select\" {...props}>\n        <tbody>\n          {this.renderRows()}\n        </tbody>\n      </table>\n    );\n  };\n\n  renderRows = () =>\n    React.Children.map(this.props.children, (tr, i) => {\n      return (\n        <tr key={i} {...tr.props}>\n          {React.Children.map(tr.props.children, (cell, j) =>\n            <Cell\n              key={j}\n              onTouchStart={this.handleTouchStartCell}\n              onTouchMove={this.handleTouchMoveCell}\n              selected={this.props.value[i][j]}\n              beingSelected={this.isCellBeingSelected(i, j)}\n              {...cell.props}\n            >\n              {cell.props.children}\n            </Cell>\n          )}\n        </tr>\n      );\n    });\n\n  handleTouchStartCell = e => {\n    const isLeftClick = e.button === 0;\n    const isTouch = e.type !== \"mousedown\";\n    if (!this.state.selectionStarted && (isLeftClick || isTouch)) {\n      e.preventDefault();\n      const { row, column } = eventToCellLocation(e);\n      this.setState({\n        selectionStarted: true,\n        startRow: row,\n        startColumn: column,\n        endRow: row,\n        endColumn: column,\n        addMode: !this.props.value[row][column]\n      });\n    }\n  };\n\n  handleTouchMoveCell = e => {\n    if (this.state.selectionStarted) {\n      e.preventDefault();\n      const { row, column } = eventToCellLocation(e);\n      this.setState({\n        endRow: row,\n        endColumn: column\n      });\n    }\n  };\n\n  handleTouchEndWindow = e => {\n    const isLeftClick = e.button === 0;\n    const isTouch = e.type !== \"mousedown\";\n    if (this.state.selectionStarted && (isLeftClick || isTouch)) {\n      const value = clone(this.props.value);\n      const minRow = Math.min(this.state.startRow, this.state.endRow);\n      const maxRow = Math.max(this.state.startRow, this.state.endRow);\n      for (let row = minRow; row <= maxRow; row++) {\n        const minColumn = Math.min(\n          this.state.startColumn,\n          this.state.endColumn\n        );\n        const maxColumn = Math.max(\n          this.state.startColumn,\n          this.state.endColumn\n        );\n        for (let column = minColumn; column <= maxColumn; column++) {\n          value[row][column] = this.state.addMode;\n        }\n      }\n      this.setState({ selectionStarted: false });\n      this.props.onChange(value);\n    }\n  };\n\n  isCellBeingSelected = (row, column) => {\n    const minRow = Math.min(this.state.startRow, this.state.endRow);\n    const maxRow = Math.max(this.state.startRow, this.state.endRow);\n    const minColumn = Math.min(this.state.startColumn, this.state.endColumn);\n    const maxColumn = Math.max(this.state.startColumn, this.state.endColumn);\n    return (\n      this.state.selectionStarted &&\n      (row >= minRow &&\n        row <= maxRow &&\n        column >= minColumn &&\n        column <= maxColumn)\n    );\n  };\n}\n\nclass Cell extends React.Component {\n  // This optimization gave a 10% performance boost while drag-selecting\n  // cells\n  shouldComponentUpdate = nextProps =>\n    this.props.beingSelected !== nextProps.beingSelected ||\n    this.props.selected !== nextProps.selected;\n\n  componentDidMount = () => {\n    // We need to call addEventListener ourselves so that we can pass\n    // {passive: false}\n    this.td.addEventListener(\"touchstart\", this.handleTouchStart, {\n      passive: false\n    });\n    this.td.addEventListener(\"touchmove\", this.handleTouchMove, {\n      passive: false\n    });\n  };\n\n  componentWillUnmount = () => {\n    this.td.removeEventListener(\"touchstart\", this.handleTouchStart);\n    this.td.removeEventListener(\"touchmove\", this.handleTouchMove);\n  };\n\n  render = () => {\n    let {\n      className,\n      disabled,\n      beingSelected,\n      selected,\n      onTouchStart,\n      onTouchMove,\n      ...props\n    } = this.props;\n    if (disabled) {\n      className += \" cell-disabled\";\n    } else {\n      className += \" cell-enabled\";\n      if (selected) {\n        className += \" cell-selected\";\n      }\n      if (beingSelected) {\n        className += \" cell-being-selected\";\n      }\n    }\n    return (\n      <td\n        ref={td => (this.td = td)}\n        className={className}\n        onMouseDown={this.handleTouchStart}\n        onMouseMove={this.handleTouchMove}\n        {...props}\n      >\n        {this.props.children || <span>&nbsp;</span>}\n      </td>\n    );\n  };\n\n  handleTouchStart = e => {\n    if (!this.props.disabled) {\n      this.props.onTouchStart(e);\n    }\n  };\n\n  handleTouchMove = e => {\n    if (!this.props.disabled) {\n      this.props.onTouchMove(e);\n    }\n  };\n}\n\n// Takes a mouse or touch event and returns the corresponding row and cell.\n// Example:\n//\n// eventToCellLocation(event);\n// {row: 2, column: 3}\nconst eventToCellLocation = e => {\n  let target;\n  // For touchmove and touchend events, e.target and e.touches[n].target are\n  // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n  // to use e.target.\n  if (e.touches) {\n    const touch = e.touches[0];\n    target = document.elementFromPoint(touch.clientX, touch.clientY);\n  } else {\n    target = e.target;\n    while (target.tagName !== \"TD\") {\n      target = target.parentNode;\n    }\n  }\n  return {\n    row: target.parentNode.rowIndex,\n    column: target.cellIndex\n  };\n};\n"]},"metadata":{},"sourceType":"script"}